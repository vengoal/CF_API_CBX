.*-----------------------------------------------------------------------**
.*
.*  Compile options:
.*
.*    CrtPnlGrp PnlGrp( CBX310H )
.*              SrcFile( QPNLSRC )
.*              SrcMbr( CBX310H )
.*
.*-----------------------------------------------------------------------**
:PNLGRP.

:HELP NAME='CHGUSRSPCA'.Change User Space Attributes - Help
:P.
The Change User Space Attributes (CHGUSRSPCA) command changes the attributes
of a user space object.
:P.
This command can be used to:
:P.
:UL.
:LI.
Extend or truncate a user space.
:LI.
Mark or unmark the user space as automatically extendible by the
system.
:LI.
Change the initial value to which future extensions of the user
space will be set.
:LI.
Change the number of pages transferred between main storage and
auxiliary storage
:EUL.
:EHELP.

:HELP NAME='CHGUSRSPCA/USRSPC'.User space (USRSPC) - Help
:XH3.User space (USRSPC)
:P.
Specifies the name and library of the user space for which to
change the specified attributes.
:P.
This is a required parameter.
:P.
:HP2.Qualifier 1: User space:EHP2.
:PARML.
:PT.:PV.name:EPV.
:PD.
Specify the name of the user space having its attributes changed.
:EPARML.
:P.:HP2.Qualifier 2: Library:EHP2.
:PARML.
:PT.:PK DEF.*CURLIB:EPK.
:PD.
The current library for the job is used to locate the user space.  If
no current library entry exists in the library list, QGPL is used.
:PT.:PV.name:EPV.
:PD.
Specify the library where the user space is located.
:EPARML.
:EHELP.

:HELP NAME='CHGUSRSPCA/AUTOEXT'.Automatic extendibility (AUTOEXT) - Help
:XH3.Automatic extendibility (AUTOEXT)
:P.
Specifies whether the user space is automatically extended by the system
when the end of the space is encountered.
:P.
The possible values are:
:P.
:PARML.
:PT.:PK DEF.*SAME:EPK.
:PD.
The user space automatic extendibility attribute does not change.
:PT.:PK.*NO:EPK.
:PD.
The user space is not automatically extendible.
:PT.:PK.*YES:EPK.
:PD.
Replace an existing user space of the same name and library.
:EPARML.
:EHELP.

:HELP NAME='CHGUSRSPCA/SIZE'.Space size (SIZE) - Help
:XH3.Space size (SIZE)
:P.
The size in bytes of the user space object.
:P.
If this value is smaller than the current size of the space, the
user space is truncated. If it is larger, the space is extended.
:P.
This value must be from 1 byte to 16776704 bytes.
:PARML.
:PT.:PK DEF.*SAME:EPK.
:PD.
The user space size is not changed.
:PT.:PV.1-16776704:EPV.
:PD.
Specify a value in the range from 1 to 16776704 bytes.
:EPARML.
:EHELP.

:HELP NAME='CHGUSRSPCA/INZVAL'.Initial value (INZVAL) - Help
:XH3.Initial value (INZVAL)
:P.
The initial value to which future extensions of the user space will
be set. You will achieve the best performance if you set this byte
to X'00'.
:PARML.
:PT.:PK DEF.*SAME:EPK.
:PD.
The user space initial value is not changed.
:PT.:PK.*DFT:EPK.
:PD.
Set the initial value of all bytes to X'00'.
:PT.:PK.*BLANK:EPK.
:PD.
Set the initial value of all bytes to X'40'.
:PT.:PV.character-value:EPV.
:PD.
Specify the value to use as the initial value of all bytes in the user
space.
:EPARML.
:EHELP.

:HELP NAME='CHGUSRSPCA/TFRSIZE'.Transfer size request (TFRSIZE) - Help
:XH3.Transfer size request (TFRSIZE)
:P.
Specifies the number of pages to be transferred between main storage
and auxiliary storage This is only a request, as the machine may use a
value of its choice in some circumstances. Allowable values range
between 0 and 32 pages. A value of 0 is an indication that the machine
should use the default transfer size for the user space.
:PARML.
:PT.:PK DEF.*SAME:EPK.
:PD.
The user space transfer size is not changed.
:PT.:PK.*DFT:EPK.
:PD.
The value 0 (zero) is specified as the transfer size request number of
pages parameter.
:PT.:PV.0-32:EPV.
:PD.
Specify a value in the range of 0 to 32 as the transfer size request
number of pages parameter.
:EPARML.
:EHELP.

:HELP NAME='CHGUSRSPCA/ERROR/MESSAGES'.
&MSG(CPX0005,QCPFMSG). CHGUSRSPCA - Help
:XH3.&MSG(CPX0005,QCPFMSG). CHGUSRSPCA
:P.
:HP3.*ESCAPE &MSG(CPX0006,QCPFMSG).:EHP3.

:DL COMPACT.
:DT.CPF24B4
:DD.&MSG(CPF24B4,QCPFMSG,*LIBL,nosub).
:DT.CPF3C4B
:DD.&MSG(CPF3C4B,QCPFMSG,*LIBL,nosub).
:DT.CPF3C4C
:DD.&MSG(CPF3C4C,QCPFMSG,*LIBL,nosub).
:DT.CPF3C4D
:DD.&MSG(CPF3C4D,QCPFMSG,*LIBL,nosub).
:DT.CPF3C90
:DD.&MSG(CPF3C90,QCPFMSG,*LIBL,nosub).
:DT.CPF3CF1
:DD.&MSG(CPF3CF1,QCPFMSG,*LIBL,nosub).
:DT.CPF8100
:DD.All CPF81xx messages could be returned. xx is from 01 to FF.
:DT.CPF9801
:DD.&MSG(CPF9801,QCPFMSG,*LIBL,nosub).
:DT.CPF9802
:DD.&MSG(CPF9802,QCPFMSG,*LIBL,nosub).
:DT.CPF9803
:DD.&MSG(CPF9803,QCPFMSG,*LIBL,nosub).
:DT.CPF9807
:DD.&MSG(CPF9807,QCPFMSG,*LIBL,nosub).
:DT.CPF9808
:DD.&MSG(CPF9808,QCPFMSG,*LIBL,nosub).
:DT.CPF9810
:DD.&MSG(CPF9810,QCPFMSG,*LIBL,nosub).
:DT.CPF9820
:DD.&MSG(CPF9820,QCPFMSG,*LIBL,nosub).
:DT.CPF9830
:DD.&MSG(CPF9830,QCPFMSG,*LIBL,nosub).
:DT.CPF9838
:DD.&MSG(CPF9838,QCPFMSG,*LIBL,nosub).
:DT.CPF9872
:DD.&MSG(CPF9872,QCPFMSG,*LIBL,nosub).
:EDL.
:EHELP.

:EPNLGRP.
